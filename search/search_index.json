{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]"},"docs":[{"location":"","text":"Welcome To Autobot Documentation! 1 min read If your reading this documentation, Our team autobot Open Source Kampala Chapter is welcoming you to this official bot that is deployed with our telegram channel here. You can also subscrie to our newslater by clicking here. . To get more updates for future release(s), check out our socials by clicking any of the links below; What Is Autobot? 1 min read Autobot is a bot library targetted to build software bots for various platforms with ease of integration in mind. project still under active construction, so there's no proper documentation or support information to help that much. To contribute to the project, please follow along with the issues being posted and also the discussions. Requirements 1 min read what you need to run autobot pip install Syntax Version Info (Description) certifi 2022.9.24 it identifies the holder and provides other important information. installation-guide-here charset-normalizer 2.1.1 A library that helps you read text from an unknown charset encoding. installation-guide-here click 8.1.3 package for creating beautiful command line interfaces in a composable way with as ittle code as necessary. It\u2019s the \u201cCommand Line Interface Creation Kit\u201d. installation-guide-here ghp-import 2.1.0 The ghp-import output command updates the local gh-pages branch with the content of the output directory (creating the branch if it doesn't already exist). installation-guide-here griffe 0.23.0 Signatures for entire Python programs. Extract the structure, the frame, the skeleton of your project, to generate API documentation. installation-guide-here idna 3.4 Support for the Internationalized Domain Names in Applications (IDNA) protocol as specified in RFC 5891. This is the latest version of the protocol and is sometimes referred to as \u201cIDNA 2008\u201d. installation-guide-here importlib-metadata 5.0.0 Library to access the metadata for a Python package. This package supplies third-party access to the functionality of importlib.metadata including improvements added to subsequent Python version. installation-guide-here Jinja2 3.1.2 Jinja is a fast, expressive, extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. Then the template is passed data to render the final document. installation-guide-here Markdown 3.3.7 This is a Python implementation of John Gruber's Markdown. It is almost completely compliant with the reference implementation, though there are a few known issues. installation-guide-here MarkupSafe 2.1.1 MarkupSafe implements a text object that escapes characters so it is safe to use in HTML and XML. Characters that have special meanings are replaced so that they display as the actual characters. installation-guide-here mergedeep 1.3.4 A deep merge function for \ud83d\udc0d. installation-guide-here mkdocs 0.4.1 MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. installation-guide-here mkdocs-autorefs 0.4.1 Automatically link across pages in MkDocs. installation-guide-here mkdocs-material 8.5.7 Write your documentation in Markdown and create a professional static site for your Open Source or commercial project in minutes \u2013 searchable, customizable, more than 50 languages, for all devices. installation-guide-here mkdocs-material-extensions 1.1 Markdown extension resources for MkDocs for Material installation-guide-here mkdocstrings 0.19.0 Automatic documentation from sources, for MkDocs. installation-guide-here mkdocstrings-pyhton 0.7.1 It is a python handler for mkdocstrings. installation-guide-here pacakging 21.3 This library provides utilities that implement the interoperability specifications which have clearly one correct behaviour (eg: PEP 440) or benefit greatly from having a single shared implementation (eg: PEP 425). installation-guide-here pygments 2.13.0 This library provides utilities that implement the interoperability specifications which have clearly one correct behaviour (eg: PEP 440) or benefit greatly from having a single shared implementation (eg: PEP 425). installation-guide-here pymdown-extensions 9.7 Extensions for Python Markdown. installation-guide-here pyparsing 3.0.9 pyparsing module - Classes and methods to define and execute parsing grammars. installation-guide-here python-dateutil 2.8.2 Extensions to the standard Python datetime module The dateutil module provides powerful extensions to the standard datetime module, available in Python. installation-guide-here PyYAML 6.0 YAML is a data serialization format designed for human readability and interaction with scripting languages. PyYAML is a YAML parser and emitter for Python installation-guide-here pyyaml-env-tag 0.1 A custom YAML tag for referencing environment variables in YAML files. installation-guide-here requests 2.28.1 Python HTTP for Humans. installation-guide-here six 1.16.0 Six is a Python 2 and 3 compatibility library. It provides utility functions for smoothing over the differences between the Python versions with the goal of writing Python code that is compatible on both Python versions. See the documentation for more information on what is provided. installation-guide-here urlib3 1.26.12 urllib3 is one of the most downloaded packages on PyPI and is a dependency of many popular Python packages like Requests, Pip, and more! urllib3 is powerful and easy to use: installation-guide-here watchdog 2.1.9 Python API and shell utilities to monitor file system events Works on 3.6+. If you want to use Python 2.6, you should stick with watchdog < 0.10.0 If you want to use Python 2.7, 3.4 or 3.5, you should stick with watchdog < 1.0.0, installation-guide here zipp 3.10.0 A pathlib-compatible Zipfile object wrapper. Official backport of the standard library Path object. installation-guide-here","title":"Home"},{"location":"#welcome-to-autobot-documentation","text":"1 min read If your reading this documentation, Our team autobot Open Source Kampala Chapter is welcoming you to this official bot that is deployed with our telegram channel here. You can also subscrie to our newslater by clicking here. . To get more updates for future release(s), check out our socials by clicking any of the links below;","title":"Welcome To Autobot Documentation!"},{"location":"#what-is-autobot","text":"1 min read Autobot is a bot library targetted to build software bots for various platforms with ease of integration in mind. project still under active construction, so there's no proper documentation or support information to help that much. To contribute to the project, please follow along with the issues being posted and also the discussions.","title":"What Is Autobot?"},{"location":"#requirements","text":"1 min read what you need to run autobot pip install Syntax Version Info (Description) certifi 2022.9.24 it identifies the holder and provides other important information. installation-guide-here charset-normalizer 2.1.1 A library that helps you read text from an unknown charset encoding. installation-guide-here click 8.1.3 package for creating beautiful command line interfaces in a composable way with as ittle code as necessary. It\u2019s the \u201cCommand Line Interface Creation Kit\u201d. installation-guide-here ghp-import 2.1.0 The ghp-import output command updates the local gh-pages branch with the content of the output directory (creating the branch if it doesn't already exist). installation-guide-here griffe 0.23.0 Signatures for entire Python programs. Extract the structure, the frame, the skeleton of your project, to generate API documentation. installation-guide-here idna 3.4 Support for the Internationalized Domain Names in Applications (IDNA) protocol as specified in RFC 5891. This is the latest version of the protocol and is sometimes referred to as \u201cIDNA 2008\u201d. installation-guide-here importlib-metadata 5.0.0 Library to access the metadata for a Python package. This package supplies third-party access to the functionality of importlib.metadata including improvements added to subsequent Python version. installation-guide-here Jinja2 3.1.2 Jinja is a fast, expressive, extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. Then the template is passed data to render the final document. installation-guide-here Markdown 3.3.7 This is a Python implementation of John Gruber's Markdown. It is almost completely compliant with the reference implementation, though there are a few known issues. installation-guide-here MarkupSafe 2.1.1 MarkupSafe implements a text object that escapes characters so it is safe to use in HTML and XML. Characters that have special meanings are replaced so that they display as the actual characters. installation-guide-here mergedeep 1.3.4 A deep merge function for \ud83d\udc0d. installation-guide-here mkdocs 0.4.1 MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. installation-guide-here mkdocs-autorefs 0.4.1 Automatically link across pages in MkDocs. installation-guide-here mkdocs-material 8.5.7 Write your documentation in Markdown and create a professional static site for your Open Source or commercial project in minutes \u2013 searchable, customizable, more than 50 languages, for all devices. installation-guide-here mkdocs-material-extensions 1.1 Markdown extension resources for MkDocs for Material installation-guide-here mkdocstrings 0.19.0 Automatic documentation from sources, for MkDocs. installation-guide-here mkdocstrings-pyhton 0.7.1 It is a python handler for mkdocstrings. installation-guide-here pacakging 21.3 This library provides utilities that implement the interoperability specifications which have clearly one correct behaviour (eg: PEP 440) or benefit greatly from having a single shared implementation (eg: PEP 425). installation-guide-here pygments 2.13.0 This library provides utilities that implement the interoperability specifications which have clearly one correct behaviour (eg: PEP 440) or benefit greatly from having a single shared implementation (eg: PEP 425). installation-guide-here pymdown-extensions 9.7 Extensions for Python Markdown. installation-guide-here pyparsing 3.0.9 pyparsing module - Classes and methods to define and execute parsing grammars. installation-guide-here python-dateutil 2.8.2 Extensions to the standard Python datetime module The dateutil module provides powerful extensions to the standard datetime module, available in Python. installation-guide-here PyYAML 6.0 YAML is a data serialization format designed for human readability and interaction with scripting languages. PyYAML is a YAML parser and emitter for Python installation-guide-here pyyaml-env-tag 0.1 A custom YAML tag for referencing environment variables in YAML files. installation-guide-here requests 2.28.1 Python HTTP for Humans. installation-guide-here six 1.16.0 Six is a Python 2 and 3 compatibility library. It provides utility functions for smoothing over the differences between the Python versions with the goal of writing Python code that is compatible on both Python versions. See the documentation for more information on what is provided. installation-guide-here urlib3 1.26.12 urllib3 is one of the most downloaded packages on PyPI and is a dependency of many popular Python packages like Requests, Pip, and more! urllib3 is powerful and easy to use: installation-guide-here watchdog 2.1.9 Python API and shell utilities to monitor file system events Works on 3.6+. If you want to use Python 2.6, you should stick with watchdog < 0.10.0 If you want to use Python 2.7, 3.4 or 3.5, you should stick with watchdog < 1.0.0, installation-guide here zipp 3.10.0 A pathlib-compatible Zipfile object wrapper. Official backport of the standard library Path object. installation-guide-here","title":"Requirements"},{"location":"404/","text":"404-Error Message Page Not Found Rectify Your Url","title":"404"},{"location":"404/#404-error-message","text":"","title":"  404-Error Message"},{"location":"404/#page-not-found-rectify-your-url","text":"","title":" Page Not Found Rectify Your Url"},{"location":"faqs/","text":"","title":"FAQS"},{"location":"objects/","text":"Documentation for Objects Animation Bases: BaseObject This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound). Parameters: Name Type Description Default file_id str) Identifier for this file, which can be used to download or reuse the file None file_unique_id str) Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. None width int) Video width as defined by sender None height int) Video height as defined by sender None duration int) Duration of the video in seconds as defined by sender None thumb obj) Optional. Animation thumbnail as defined by sender required file_name str) Optional. Original animation filename as defined by sender required mime_type str) Optional. MIME type of the file as defined by sender required file_size int) Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value. required Documentation for Audio Audio Bases: BaseObject This object represents an audio file to be treated as music by the Telegram clients. Parameters: Name Type Description Default file_id str Unique identifier for this file None file_unique_id str Unique identifier for this file, which is supposed to be the same over time and for different bots. None duration int Optional Duration of the audio in seconds as defined by sender required performer str Optional. Performer of the audio as defined by sender or by audio tags required title str Optional. Title of the audio as defined by sender or by audio tags required file_name str Optional. Original filename as defined by sender required mime_type str Optional. MIME type of the file as defined by sender required file_size int Optional. File size required thumb obj: PhotoSize , optional): Optional. Thumbnail of the album cover to which the music file belongs required Documentation for Botcommand BotCommandScopeAllChatAdministrators Bases: BaseObject Represents the scope of bot commands, covering all group and supergroup chat administrators. https://core.telegram.org/bots/api#botcommandscopeallchatadministrators Parameters: Name Type Description Default type obj: str ): Scope type, must be all_chat_administrators. None BotCommandScopeAllGroupChats Bases: BaseObject Represents the scope of bot commands, covering all group and supergroup chats. https://core.telegram.org/bots/api#botcommandscopeallgroupchats Parameters: Name Type Description Default type obj: str ): Scope type, must be all_group_chats. None BotCommandScopeAllPrivateChats Bases: BaseObject Represents the scope of bot commands, covering all private chats. https://core.telegram.org/bots/api#botcommandscopeallprivatechats Parameters: Name Type Description Default type obj: str ): Scope type, must be all_private_chats. None BotCommandScopeChat Bases: BaseObject Represents the scope of bot commands, covering a specific chat. https://core.telegram.org/bots/api#botcommandscopechat Parameters: Name Type Description Default type obj: str ): Scope type, must be chat. None chat_id obj: int ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername). None BotCommandScopeChatAdministrators Bases: BaseObject Represents the scope of bot commands, covering all administrators of a specific group or supergroup chat. https://core.telegram.org/bots/api#botcommandscopechatadministrators Parameters: Name Type Description Default type obj: str ): Scope type, must be chat_administrators. None chat_id obj: int ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername). None BotCommandScopeChatMember Bases: BaseObject Represents the scope of bot commands, covering a specific member of a group or supergroup chat. https://core.telegram.org/bots/api#botcommandscopechatmember Parameters: Name Type Description Default type obj: str ): Scope type, must be chat_member. None chat_id obj: int ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername). None user_id obj: int ): Unique identifier of the target user. None BotCommandScopeDefault Bases: BaseObject Represents the default scope of bot commands. Default commands are used if no commands with a narrower scope are specified for the user. https://core.telegram.org/bots/api#botcommandscopedefault Parameters: Name Type Description Default type obj: str ): Scope type, must be default. None","title":"Objects"},{"location":"objects/#documentation-for-objects","text":"","title":"Documentation for Objects"},{"location":"objects/#autobot.telegram.objects.animation.Animation","text":"Bases: BaseObject This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound). Parameters: Name Type Description Default file_id str) Identifier for this file, which can be used to download or reuse the file None file_unique_id str) Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. None width int) Video width as defined by sender None height int) Video height as defined by sender None duration int) Duration of the video in seconds as defined by sender None thumb obj) Optional. Animation thumbnail as defined by sender required file_name str) Optional. Original animation filename as defined by sender required mime_type str) Optional. MIME type of the file as defined by sender required file_size int) Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value. required","title":"Animation"},{"location":"objects/#documentation-for-audio","text":"","title":"Documentation for Audio"},{"location":"objects/#autobot.telegram.objects.audio.Audio","text":"Bases: BaseObject This object represents an audio file to be treated as music by the Telegram clients. Parameters: Name Type Description Default file_id str Unique identifier for this file None file_unique_id str Unique identifier for this file, which is supposed to be the same over time and for different bots. None duration int Optional Duration of the audio in seconds as defined by sender required performer str Optional. Performer of the audio as defined by sender or by audio tags required title str Optional. Title of the audio as defined by sender or by audio tags required file_name str Optional. Original filename as defined by sender required mime_type str Optional. MIME type of the file as defined by sender required file_size int Optional. File size required thumb obj: PhotoSize , optional): Optional. Thumbnail of the album cover to which the music file belongs required","title":"Audio"},{"location":"objects/#documentation-for-botcommand","text":"","title":"Documentation for Botcommand"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeAllChatAdministrators","text":"Bases: BaseObject Represents the scope of bot commands, covering all group and supergroup chat administrators. https://core.telegram.org/bots/api#botcommandscopeallchatadministrators Parameters: Name Type Description Default type obj: str ): Scope type, must be all_chat_administrators. None","title":"BotCommandScopeAllChatAdministrators"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeAllGroupChats","text":"Bases: BaseObject Represents the scope of bot commands, covering all group and supergroup chats. https://core.telegram.org/bots/api#botcommandscopeallgroupchats Parameters: Name Type Description Default type obj: str ): Scope type, must be all_group_chats. None","title":"BotCommandScopeAllGroupChats"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeAllPrivateChats","text":"Bases: BaseObject Represents the scope of bot commands, covering all private chats. https://core.telegram.org/bots/api#botcommandscopeallprivatechats Parameters: Name Type Description Default type obj: str ): Scope type, must be all_private_chats. None","title":"BotCommandScopeAllPrivateChats"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeChat","text":"Bases: BaseObject Represents the scope of bot commands, covering a specific chat. https://core.telegram.org/bots/api#botcommandscopechat Parameters: Name Type Description Default type obj: str ): Scope type, must be chat. None chat_id obj: int ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername). None","title":"BotCommandScopeChat"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeChatAdministrators","text":"Bases: BaseObject Represents the scope of bot commands, covering all administrators of a specific group or supergroup chat. https://core.telegram.org/bots/api#botcommandscopechatadministrators Parameters: Name Type Description Default type obj: str ): Scope type, must be chat_administrators. None chat_id obj: int ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername). None","title":"BotCommandScopeChatAdministrators"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeChatMember","text":"Bases: BaseObject Represents the scope of bot commands, covering a specific member of a group or supergroup chat. https://core.telegram.org/bots/api#botcommandscopechatmember Parameters: Name Type Description Default type obj: str ): Scope type, must be chat_member. None chat_id obj: int ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername). None user_id obj: int ): Unique identifier of the target user. None","title":"BotCommandScopeChatMember"},{"location":"objects/#autobot.telegram.objects.botcommand.BotCommandScopeDefault","text":"Bases: BaseObject Represents the default scope of bot commands. Default commands are used if no commands with a narrower scope are specified for the user. https://core.telegram.org/bots/api#botcommandscopedefault Parameters: Name Type Description Default type obj: str ): Scope type, must be default. None","title":"BotCommandScopeDefault"},{"location":"reference/","text":"","title":"Reference"}]}